{"version":3,"file":"tour.min.js","sources":["../src/tour.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A user tour.\n *\n * @module tool_usertours/tour\n * @copyright  2018 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * A list of steps.\n *\n * @typedef {Object[]} StepList\n * @property {Number} stepId The id of the step in the database\n * @property {Number} position The position of the step within the tour (zero-indexed)\n */\n\nimport $ from 'jquery';\nimport * as Aria from 'core/aria';\nimport Popper from 'core/popper';\nimport {dispatchEvent} from 'core/event_dispatcher';\nimport {eventTypes} from './events';\nimport {getString} from 'core/str';\nimport {prefetchStrings} from 'core/prefetch';\nimport {notifyFilterContentUpdated} from 'core/event';\nimport PendingPromise from 'core/pending';\n\n/**\n * The minimum spacing for tour step to display.\n *\n * @private\n * @constant\n * @type {number}\n */\nconst MINSPACING = 10;\nconst BUFFER = 10;\n\n/**\n * A user tour.\n *\n * @class tool_usertours/tour\n * @property {boolean} tourRunning Whether the tour is currently running.\n */\nconst Tour = class {\n    tourRunning = false;\n\n    /**\n     * @param   {object}    config  The configuration object.\n     */\n    constructor(config) {\n        this.init(config);\n    }\n\n    /**\n     * Initialise the tour.\n     *\n     * @method  init\n     * @param   {Object}    config  The configuration object.\n     * @chainable\n     * @return {Object} this.\n     */\n    init(config) {\n        // Unset all handlers.\n        this.eventHandlers = {};\n\n        // Reset the current tour states.\n        this.reset();\n\n        // Store the initial configuration.\n        this.originalConfiguration = config || {};\n\n        // Apply configuration.\n        this.configure.apply(this, arguments);\n\n        // Unset recalculate state.\n        this.possitionNeedToBeRecalculated = false;\n\n        // Unset recalculate count.\n        this.recalculatedNo = 0;\n\n        try {\n            this.storage = window.sessionStorage;\n            this.storageKey = 'tourstate_' + this.tourName;\n        } catch (e) {\n            this.storage = false;\n            this.storageKey = '';\n        }\n\n        prefetchStrings('tool_usertours', [\n            'nextstep_sequence',\n            'skip_tour'\n        ]);\n\n        return this;\n    }\n\n    /**\n     * Reset the current tour state.\n     *\n     * @method  reset\n     * @chainable\n     * @return {Object} this.\n     */\n    reset() {\n        // Hide the current step.\n        this.hide();\n\n        // Unset all handlers.\n        this.eventHandlers = [];\n\n        // Unset all listeners.\n        this.resetStepListeners();\n\n        // Unset the original configuration.\n        this.originalConfiguration = {};\n\n        // Reset the current step number and list of steps.\n        this.steps = [];\n\n        // Reset the current step number.\n        this.currentStepNumber = 0;\n\n        return this;\n    }\n\n    /**\n     * Prepare tour configuration.\n     *\n     * @method  configure\n     * @param {Object} config The configuration object.\n     * @chainable\n     * @return {Object} this.\n     */\n    configure(config) {\n        if (typeof config === 'object') {\n            // Tour name.\n            if (typeof config.tourName !== 'undefined') {\n                this.tourName = config.tourName;\n            }\n\n            // Set up eventHandlers.\n            if (config.eventHandlers) {\n                for (let eventName in config.eventHandlers) {\n                    config.eventHandlers[eventName].forEach(function(handler) {\n                        this.addEventHandler(eventName, handler);\n                    }, this);\n                }\n            }\n\n            // Reset the step configuration.\n            this.resetStepDefaults(true);\n\n            // Configure the steps.\n            if (typeof config.steps === 'object') {\n                this.steps = config.steps;\n            }\n\n            if (typeof config.template !== 'undefined') {\n                this.templateContent = config.template;\n            }\n        }\n\n        // Check that we have enough to start the tour.\n        this.checkMinimumRequirements();\n\n        return this;\n    }\n\n    /**\n     * Check that the configuration meets the minimum requirements.\n     *\n     * @method  checkMinimumRequirements\n     */\n    checkMinimumRequirements() {\n        // Need a tourName.\n        if (!this.tourName) {\n            throw new Error(\"Tour Name required\");\n        }\n\n        // Need a minimum of one step.\n        if (!this.steps || !this.steps.length) {\n            throw new Error(\"Steps must be specified\");\n        }\n    }\n\n    /**\n     * Reset step default configuration.\n     *\n     * @method  resetStepDefaults\n     * @param   {Boolean}   loadOriginalConfiguration   Whether to load the original configuration supplied with the Tour.\n     * @chainable\n     * @return {Object} this.\n     */\n    resetStepDefaults(loadOriginalConfiguration) {\n        if (typeof loadOriginalConfiguration === 'undefined') {\n            loadOriginalConfiguration = true;\n        }\n\n        this.stepDefaults = {};\n        if (!loadOriginalConfiguration || typeof this.originalConfiguration.stepDefaults === 'undefined') {\n            this.setStepDefaults({});\n        } else {\n            this.setStepDefaults(this.originalConfiguration.stepDefaults);\n        }\n\n        return this;\n    }\n\n    /**\n     * Set the step defaults.\n     *\n     * @method  setStepDefaults\n     * @param   {Object}    stepDefaults                The step defaults to apply to all steps\n     * @chainable\n     * @return {Object} this.\n     */\n    setStepDefaults(stepDefaults) {\n        if (!this.stepDefaults) {\n            this.stepDefaults = {};\n        }\n        $.extend(\n            this.stepDefaults,\n            {\n                element:        '',\n                placement:      'top',\n                delay:          0,\n                moveOnClick:    false,\n                moveAfterTime:  0,\n                orphan:         false,\n                direction:      1,\n            },\n            stepDefaults\n        );\n\n        return this;\n    }\n\n    /**\n     * Retrieve the current step number.\n     *\n     * @method  getCurrentStepNumber\n     * @return  {Number}                   The current step number\n     */\n    getCurrentStepNumber() {\n        return parseInt(this.currentStepNumber, 10);\n    }\n\n    /**\n     * Store the current step number.\n     *\n     * @method  setCurrentStepNumber\n     * @param   {Number}   stepNumber      The current step number\n     * @chainable\n     */\n    setCurrentStepNumber(stepNumber) {\n        this.currentStepNumber = stepNumber;\n        if (this.storage) {\n            try {\n                this.storage.setItem(this.storageKey, stepNumber);\n            } catch (e) {\n                if (e.code === DOMException.QUOTA_EXCEEDED_ERR) {\n                    this.storage.removeItem(this.storageKey);\n                }\n            }\n        }\n    }\n\n    /**\n     * Get the next step number after the currently displayed step.\n     *\n     * @method  getNextStepNumber\n     * @param   {Number}   stepNumber      The current step number\n     * @return  {Number}    The next step number to display\n     */\n    getNextStepNumber(stepNumber) {\n        if (typeof stepNumber === 'undefined') {\n            stepNumber = this.getCurrentStepNumber();\n        }\n        let nextStepNumber = stepNumber + 1;\n\n        // Keep checking the remaining steps.\n        while (nextStepNumber <= this.steps.length) {\n            if (this.isStepPotentiallyVisible(this.getStepConfig(nextStepNumber))) {\n                return nextStepNumber;\n            }\n            nextStepNumber++;\n        }\n\n        return null;\n    }\n\n    /**\n     * Get the previous step number before the currently displayed step.\n     *\n     * @method  getPreviousStepNumber\n     * @param   {Number}   stepNumber      The current step number\n     * @return  {Number}    The previous step number to display\n     */\n    getPreviousStepNumber(stepNumber) {\n        if (typeof stepNumber === 'undefined') {\n            stepNumber = this.getCurrentStepNumber();\n        }\n        let previousStepNumber = stepNumber - 1;\n\n        // Keep checking the remaining steps.\n        while (previousStepNumber >= 0) {\n            if (this.isStepPotentiallyVisible(this.getStepConfig(previousStepNumber))) {\n                return previousStepNumber;\n            }\n            previousStepNumber--;\n        }\n\n        return null;\n    }\n\n    /**\n     * Is the step the final step number?\n     *\n     * @method  isLastStep\n     * @param   {Number}   stepNumber  Step number to test\n     * @return  {Boolean}               Whether the step is the final step\n     */\n    isLastStep(stepNumber) {\n        let nextStepNumber = this.getNextStepNumber(stepNumber);\n\n        return nextStepNumber === null;\n    }\n\n    /**\n     * Is this step potentially visible?\n     *\n     * @method  isStepPotentiallyVisible\n     * @param   {Object}    stepConfig      The step configuration to normalise\n     * @return  {Boolean}               Whether the step is the potentially visible\n     */\n    isStepPotentiallyVisible(stepConfig) {\n        if (!stepConfig) {\n            // Without step config, there can be no step.\n            return false;\n        }\n\n        if (this.isStepActuallyVisible(stepConfig)) {\n            // If it is actually visible, it is already potentially visible.\n            return true;\n        }\n\n        if (typeof stepConfig.orphan !== 'undefined' && stepConfig.orphan) {\n            // Orphan steps have no target. They are always visible.\n            return true;\n        }\n\n        if (typeof stepConfig.delay !== 'undefined' && stepConfig.delay) {\n            // Only return true if the activated has not been used yet.\n            return true;\n        }\n\n        // Not theoretically, or actually visible.\n        return false;\n    }\n\n    /**\n     * Get potentially visible steps in a tour.\n     *\n     * @returns {StepList} A list of ordered steps\n     */\n    getPotentiallyVisibleSteps() {\n        let position = 1;\n        let result = [];\n        // Checking the total steps.\n        for (let stepNumber = 0; stepNumber < this.steps.length; stepNumber++) {\n            const stepConfig = this.getStepConfig(stepNumber);\n            if (this.isStepPotentiallyVisible(stepConfig)) {\n                result[stepNumber] = {stepId: stepConfig.stepid, position: position};\n                position++;\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Is this step actually visible?\n     *\n     * @method  isStepActuallyVisible\n     * @param   {Object}    stepConfig      The step configuration to normalise\n     * @return  {Boolean}               Whether the step is actually visible\n     */\n    isStepActuallyVisible(stepConfig) {\n        if (!stepConfig) {\n            // Without step config, there can be no step.\n            return false;\n        }\n\n        // Check if the CSS styles are allowed on the browser or not.\n        if (!this.isCSSAllowed()) {\n            return false;\n        }\n\n        let target = this.getStepTarget(stepConfig);\n        if (target && target.length && target.is(':visible')) {\n            // Without a target, there can be no step.\n            return !!target.length;\n        }\n\n        return false;\n    }\n\n    /**\n     * Is the browser actually allow CSS styles?\n     *\n     * @returns {boolean} True if the browser is allowing CSS styles\n     */\n    isCSSAllowed() {\n        const testCSSElement = document.createElement('div');\n        testCSSElement.classList.add('hide');\n        document.body.appendChild(testCSSElement);\n        const styles = window.getComputedStyle(testCSSElement);\n        const isAllowed = styles.display === 'none';\n        testCSSElement.remove();\n\n        return isAllowed;\n    }\n\n    /**\n     * Go to the next step in the tour.\n     *\n     * @method  next\n     * @chainable\n     * @return {Object} this.\n     */\n    next() {\n        return this.gotoStep(this.getNextStepNumber());\n    }\n\n    /**\n     * Go to the previous step in the tour.\n     *\n     * @method  previous\n     * @chainable\n     * @return {Object} this.\n     */\n    previous() {\n        return this.gotoStep(this.getPreviousStepNumber(), -1);\n    }\n\n    /**\n     * Go to the specified step in the tour.\n     *\n     * @method  gotoStep\n     * @param   {Number}   stepNumber     The step number to display\n     * @param   {Number}   direction      Next or previous step\n     * @chainable\n     * @return {Object} this.\n     * @fires tool_usertours/stepRender\n     * @fires tool_usertours/stepRendered\n     * @fires tool_usertours/stepHide\n     * @fires tool_usertours/stepHidden\n     */\n    gotoStep(stepNumber, direction) {\n        if (stepNumber < 0) {\n            return this.endTour();\n        }\n\n        let stepConfig = this.getStepConfig(stepNumber);\n        if (stepConfig === null) {\n            return this.endTour();\n        }\n\n        return this._gotoStep(stepConfig, direction);\n    }\n\n    _gotoStep(stepConfig, direction) {\n        if (!stepConfig) {\n            return this.endTour();\n        }\n\n        const pendingPromise = new PendingPromise(`tool_usertours/tour:_gotoStep-${stepConfig.stepNumber}`);\n\n        if (typeof stepConfig.delay !== 'undefined' && stepConfig.delay && !stepConfig.delayed) {\n            stepConfig.delayed = true;\n            window.setTimeout(function(stepConfig, direction) {\n                this._gotoStep(stepConfig, direction);\n                pendingPromise.resolve();\n            }, stepConfig.delay, stepConfig, direction);\n\n            return this;\n        } else if (!stepConfig.orphan && !this.isStepActuallyVisible(stepConfig)) {\n            const fn = direction == -1 ? 'getPreviousStepNumber' : 'getNextStepNumber';\n            this.gotoStep(this[fn](stepConfig.stepNumber), direction);\n\n            pendingPromise.resolve();\n            return this;\n        }\n\n        this.hide();\n\n        const stepRenderEvent = this.dispatchEvent(eventTypes.stepRender, {stepConfig}, true);\n        if (!stepRenderEvent.defaultPrevented) {\n            this.renderStep(stepConfig);\n            this.dispatchEvent(eventTypes.stepRendered, {stepConfig});\n        }\n\n        pendingPromise.resolve();\n        return this;\n    }\n\n    /**\n     * Fetch the normalised step configuration for the specified step number.\n     *\n     * @method  getStepConfig\n     * @param   {Number}   stepNumber      The step number to fetch configuration for\n     * @return  {Object}                    The step configuration\n     */\n    getStepConfig(stepNumber) {\n        if (stepNumber === null || stepNumber < 0 || stepNumber >= this.steps.length) {\n            return null;\n        }\n\n        // Normalise the step configuration.\n        let stepConfig = this.normalizeStepConfig(this.steps[stepNumber]);\n\n        // Add the stepNumber to the stepConfig.\n        stepConfig = $.extend(stepConfig, {stepNumber: stepNumber});\n\n        return stepConfig;\n    }\n\n    /**\n     * Normalise the supplied step configuration.\n     *\n     * @method  normalizeStepConfig\n     * @param   {Object}    stepConfig      The step configuration to normalise\n     * @return  {Object}                    The normalised step configuration\n     */\n    normalizeStepConfig(stepConfig) {\n\n        if (typeof stepConfig.reflex !== 'undefined' && typeof stepConfig.moveAfterClick === 'undefined') {\n            stepConfig.moveAfterClick = stepConfig.reflex;\n        }\n\n        if (typeof stepConfig.element !== 'undefined' && typeof stepConfig.target === 'undefined') {\n            stepConfig.target = stepConfig.element;\n        }\n\n        if (typeof stepConfig.content !== 'undefined' && typeof stepConfig.body === 'undefined') {\n            stepConfig.body = stepConfig.content;\n        }\n\n        stepConfig = $.extend({}, this.stepDefaults, stepConfig);\n\n        stepConfig = $.extend({}, {\n            attachTo: stepConfig.target,\n            attachPoint: 'after',\n        }, stepConfig);\n\n        if (stepConfig.attachTo) {\n            stepConfig.attachTo = $(stepConfig.attachTo).first();\n        }\n\n        return stepConfig;\n    }\n\n    /**\n     * Fetch the actual step target from the selector.\n     *\n     * This should not be called until after any delay has completed.\n     *\n     * @method  getStepTarget\n     * @param   {Object}    stepConfig      The step configuration\n     * @return  {$}\n     */\n    getStepTarget(stepConfig) {\n        if (stepConfig.target) {\n            return $(stepConfig.target);\n        }\n\n        return null;\n    }\n\n    /**\n     * Fire any event handlers for the specified event.\n     *\n     * @param {String} eventName The name of the event\n     * @param {Object} [detail={}] Any additional details to pass into the eveent\n     * @param {Boolean} [cancelable=false] Whether preventDefault() can be called\n     * @returns {CustomEvent}\n     */\n    dispatchEvent(\n        eventName,\n        detail = {},\n        cancelable = false\n    ) {\n        return dispatchEvent(eventName, {\n            // Add the tour to the detail.\n            tour: this,\n            ...detail,\n        }, document, {\n            cancelable,\n        });\n    }\n\n    /**\n     * @method addEventHandler\n     * @param  {string}      eventName       The name of the event to listen for\n     * @param  {function}    handler         The event handler to call\n     * @return {Object} this.\n     */\n    addEventHandler(eventName, handler) {\n        if (typeof this.eventHandlers[eventName] === 'undefined') {\n            this.eventHandlers[eventName] = [];\n        }\n\n        this.eventHandlers[eventName].push(handler);\n\n        return this;\n    }\n\n    /**\n     * Process listeners for the step being shown.\n     *\n     * @method  processStepListeners\n     * @param   {object}    stepConfig      The configuration for the step\n     * @chainable\n     * @return {Object} this.\n     */\n    processStepListeners(stepConfig) {\n        this.listeners.push(\n        // Next button.\n        {\n            node: this.currentStepNode,\n            args: ['click', '[data-role=\"next\"]', $.proxy(this.next, this)]\n        },\n\n        // Close and end tour buttons.\n        {\n            node: this.currentStepNode,\n            args: ['click', '[data-role=\"end\"]', $.proxy(this.endTour, this)]\n        },\n\n        // Click backdrop and hide tour.\n        {\n            node: $('[data-flexitour=\"backdrop\"]'),\n            args: ['click', $.proxy(this.hide, this)]\n        },\n\n        // Keypresses.\n        {\n            node: $('body'),\n            args: ['keydown', $.proxy(this.handleKeyDown, this)]\n        });\n\n        if (stepConfig.moveOnClick) {\n            var targetNode = this.getStepTarget(stepConfig);\n            this.listeners.push({\n                node: targetNode,\n                args: ['click', $.proxy(function(e) {\n                    if ($(e.target).parents('[data-flexitour=\"container\"]').length === 0) {\n                        // Ignore clicks when they are in the flexitour.\n                        window.setTimeout($.proxy(this.next, this), 500);\n                    }\n                }, this)]\n            });\n        }\n\n        this.listeners.forEach(function(listener) {\n            listener.node.on.apply(listener.node, listener.args);\n        });\n\n        return this;\n    }\n\n    /**\n     * Reset step listeners.\n     *\n     * @method  resetStepListeners\n     * @chainable\n     * @return {Object} this.\n     */\n    resetStepListeners() {\n        // Stop listening to all external handlers.\n        if (this.listeners) {\n            this.listeners.forEach(function(listener) {\n                listener.node.off.apply(listener.node, listener.args);\n            });\n        }\n        this.listeners = [];\n\n        return this;\n    }\n\n    /**\n     * The standard step renderer.\n     *\n     * @method  renderStep\n     * @param   {Object}    stepConfig      The step configuration of the step\n     * @chainable\n     * @return {Object} this.\n     */\n    renderStep(stepConfig) {\n        // Store the current step configuration for later.\n        this.currentStepConfig = stepConfig;\n        this.setCurrentStepNumber(stepConfig.stepNumber);\n\n        // Fetch the template and convert it to a $ object.\n        let template = $(this.getTemplateContent());\n\n        // Title.\n        template.find('[data-placeholder=\"title\"]')\n            .html(stepConfig.title);\n\n        // Body.\n        template.find('[data-placeholder=\"body\"]')\n            .html(stepConfig.body);\n\n        // Buttons.\n        const nextBtn = template.find('[data-role=\"next\"]');\n        const endBtn = template.find('[data-role=\"end\"]');\n\n        // Is this the final step?\n        if (this.isLastStep(stepConfig.stepNumber)) {\n            nextBtn.hide();\n            endBtn.removeClass(\"btn-secondary\").addClass(\"btn-primary\");\n        } else {\n            nextBtn.prop('disabled', false);\n            // Use Skip tour label for the End tour button.\n            getString('skip_tour', 'tool_usertours').then(value => {\n                endBtn.html(value);\n                return;\n            }).catch();\n        }\n\n        nextBtn.attr('role', 'button');\n        endBtn.attr('role', 'button');\n\n        if (this.originalConfiguration.displaystepnumbers) {\n            const stepsPotentiallyVisible = this.getPotentiallyVisibleSteps();\n            const totalStepsPotentiallyVisible = stepsPotentiallyVisible.length;\n            const position = stepsPotentiallyVisible[stepConfig.stepNumber].position;\n            if (totalStepsPotentiallyVisible > 1) {\n                // Change the label of the Next button to include the sequence.\n                getString('nextstep_sequence', 'tool_usertours',\n                    {position: position, total: totalStepsPotentiallyVisible}).then(value => {\n                    nextBtn.html(value);\n                    return;\n                }).catch();\n            }\n        }\n\n        // Replace the template with the updated version.\n        stepConfig.template = template;\n\n        // Add to the page.\n        this.addStepToPage(stepConfig);\n\n        // Process step listeners after adding to the page.\n        // This uses the currentNode.\n        this.processStepListeners(stepConfig);\n\n        return this;\n    }\n\n    /**\n     * Getter for the template content.\n     *\n     * @method  getTemplateContent\n     * @return  {$}\n     */\n    getTemplateContent() {\n        return $(this.templateContent).clone();\n    }\n\n    /**\n     * Helper to add a step to the page.\n     *\n     * @method  addStepToPage\n     * @param   {Object}    stepConfig      The step configuration of the step\n     * @chainable\n     * @return {Object} this.\n     */\n    addStepToPage(stepConfig) {\n        // Create the stepNode from the template data.\n        let currentStepNode = $('<span data-flexitour=\"container\"></span>')\n            .html(stepConfig.template)\n            .hide();\n        // Trigger the Moodle filters.\n        notifyFilterContentUpdated(currentStepNode);\n\n        // The scroll animation occurs on the body or html.\n        let animationTarget = $('body, html')\n            .stop(true, true);\n\n        if (this.isStepActuallyVisible(stepConfig)) {\n            let targetNode = this.getStepTarget(stepConfig);\n\n            if (targetNode.parents('[data-usertour=\"scroller\"]').length) {\n                animationTarget = targetNode.parents('[data-usertour=\"scroller\"]');\n            }\n\n            targetNode.data('flexitour', 'target');\n\n            // Add the backdrop.\n            this.positionBackdrop(stepConfig);\n\n            $(document.body).append(currentStepNode);\n            this.currentStepNode = currentStepNode;\n\n            // Ensure that the step node is positioned.\n            // Some situations mean that the value is not properly calculated without this step.\n            this.currentStepNode.css({\n                top: 0,\n                left: 0,\n            });\n\n            const pendingPromise = new PendingPromise(`tool_usertours/tour:addStepToPage-${stepConfig.stepNumber}`);\n            animationTarget\n                .animate({\n                    scrollTop: this.calculateScrollTop(stepConfig),\n                }).promise().then(function() {\n                        this.positionStep(stepConfig);\n                        this.revealStep(stepConfig);\n                        pendingPromise.resolve();\n                        return;\n                    }.bind(this))\n                    .catch(function() {\n                        // Silently fail.\n                    });\n\n        } else if (stepConfig.orphan) {\n            stepConfig.isOrphan = true;\n\n            // This will be appended to the body instead.\n            stepConfig.attachTo = $('body').first();\n            stepConfig.attachPoint = 'append';\n\n            // Add the backdrop.\n            this.positionBackdrop(stepConfig);\n\n            // This is an orphaned step.\n            currentStepNode.addClass('orphan');\n\n            // It lives in the body.\n            $(document.body).append(currentStepNode);\n            this.currentStepNode = currentStepNode;\n\n            this.currentStepNode.css('position', 'fixed');\n\n            this.currentStepPopper = new Popper(\n                $('body'),\n                this.currentStepNode[0], {\n                    removeOnDestroy: true,\n                    placement: stepConfig.placement + '-start',\n                    arrowElement: '[data-role=\"arrow\"]',\n                    // Empty the modifiers. We've already placed the step and don't want it moved.\n                    modifiers: {\n                        hide: {\n                            enabled: false,\n                        },\n                        applyStyle: {\n                            onLoad: null,\n                            enabled: false,\n                        },\n                    },\n                    onCreate: () => {\n                        // First, we need to check if the step's content contains any images.\n                        const images = this.currentStepNode.find('img');\n                        if (images.length) {\n                            // Images found, need to calculate the position when the image is loaded.\n                            images.on('load', () => {\n                                this.calculateStepPositionInPage(currentStepNode);\n                            });\n                        }\n                        this.calculateStepPositionInPage(currentStepNode);\n                    }\n                }\n            );\n\n            this.revealStep(stepConfig);\n        }\n\n        return this;\n    }\n\n    /**\n     * Make the given step visible.\n     *\n     * @method revealStep\n     * @param {Object} stepConfig The step configuration of the step\n     * @chainable\n     * @return {Object} this.\n     */\n    revealStep(stepConfig) {\n        // Fade the step in.\n        const pendingPromise = new PendingPromise(`tool_usertours/tour:revealStep-${stepConfig.stepNumber}`);\n        this.currentStepNode.fadeIn('', $.proxy(function() {\n                // Announce via ARIA.\n                this.announceStep(stepConfig);\n\n                // Focus on the current step Node.\n                this.currentStepNode.focus();\n                window.setTimeout($.proxy(function() {\n                    // After a brief delay, focus again.\n                    // There seems to be an issue with Jaws where it only reads the dialogue title initially.\n                    // This second focus helps it to read the full dialogue.\n                    if (this.currentStepNode) {\n                        this.currentStepNode.focus();\n                    }\n                    pendingPromise.resolve();\n                }, this), 100);\n\n            }, this));\n\n        return this;\n    }\n\n    /**\n     * Helper to announce the step on the page.\n     *\n     * @method  announceStep\n     * @param   {Object}    stepConfig      The step configuration of the step\n     * @chainable\n     * @return {Object} this.\n     */\n    announceStep(stepConfig) {\n        // Setup the step Dialogue as per:\n        // * https://www.w3.org/TR/wai-aria-practices/#dialog_nonmodal\n        // * https://www.w3.org/TR/wai-aria-practices/#dialog_modal\n\n        // Generate an ID for the current step node.\n        let stepId = 'tour-step-' + this.tourName + '-' + stepConfig.stepNumber;\n        this.currentStepNode.attr('id', stepId);\n\n        let bodyRegion = this.currentStepNode.find('[data-placeholder=\"body\"]').first();\n        bodyRegion.attr('id', stepId + '-body');\n        bodyRegion.attr('role', 'document');\n\n        let headerRegion = this.currentStepNode.find('[data-placeholder=\"title\"]').first();\n        headerRegion.attr('id', stepId + '-title');\n        headerRegion.attr('aria-labelledby', stepId + '-body');\n\n        // Generally, a modal dialog has a role of dialog.\n        this.currentStepNode.attr('role', 'dialog');\n        this.currentStepNode.attr('tabindex', 0);\n        this.currentStepNode.attr('aria-labelledby', stepId + '-title');\n        this.currentStepNode.attr('aria-describedby', stepId + '-body');\n\n        // Configure ARIA attributes on the target.\n        let target = this.getStepTarget(stepConfig);\n        if (target) {\n            target.data('original-tabindex', target.attr('tabindex'));\n            if (!target.attr('tabindex')) {\n                target.attr('tabindex', 0);\n            }\n\n            target\n                .data('original-describedby', target.attr('aria-describedby'))\n                .attr('aria-describedby', stepId + '-body')\n                ;\n        }\n\n        this.accessibilityShow(stepConfig);\n\n        return this;\n    }\n\n    /**\n     * Handle key down events.\n     *\n     * @method  handleKeyDown\n     * @param   {EventFacade} e\n     */\n    handleKeyDown(e) {\n        let tabbableSelector = 'a[href], link[href], [draggable=true], [contenteditable=true], ';\n        tabbableSelector += ':input:enabled, [tabindex], button:enabled';\n        switch (e.keyCode) {\n            case 27:\n                this.endTour();\n                break;\n\n            // 9 == Tab - trap focus for items with a backdrop.\n            case 9:\n                // Tab must be handled on key up only in this instance.\n                (function() {\n                    if (!this.currentStepConfig.hasBackdrop) {\n                        // Trapping tab focus is only handled for those steps with a backdrop.\n                        return;\n                    }\n\n                    // Find all tabbable locations.\n                    let activeElement = $(document.activeElement);\n                    let stepTarget = this.getStepTarget(this.currentStepConfig);\n                    let tabbableNodes = $(tabbableSelector);\n                    let dialogContainer = $('span[data-flexitour=\"container\"]');\n                    let currentIndex;\n                    // Filter out element which is not belong to target section or dialogue.\n                    if (stepTarget) {\n                        tabbableNodes = tabbableNodes.filter(function(index, element) {\n                            return stepTarget !== null\n                                && (stepTarget.has(element).length\n                                    || dialogContainer.has(element).length\n                                    || stepTarget.is(element)\n                                    || dialogContainer.is(element));\n                        });\n                    }\n\n                    // Find index of focusing element.\n                    tabbableNodes.each(function(index, element) {\n                        if (activeElement.is(element)) {\n                            currentIndex = index;\n                            return false;\n                        }\n                        // Keep looping.\n                        return true;\n                    });\n\n                    let nextIndex;\n                    let nextNode;\n                    let focusRelevant;\n                    if (currentIndex != void 0) {\n                        let direction = 1;\n                        if (e.shiftKey) {\n                            direction = -1;\n                        }\n                        nextIndex = currentIndex;\n                        do {\n                            nextIndex += direction;\n                            nextNode = $(tabbableNodes[nextIndex]);\n                        } while (nextNode.length && nextNode.is(':disabled') || nextNode.is(':hidden'));\n                        if (nextNode.length) {\n                            // A new f\n                            focusRelevant = nextNode.closest(stepTarget).length;\n                            focusRelevant = focusRelevant || nextNode.closest(this.currentStepNode).length;\n                        } else {\n                            // Unable to find the target somehow.\n                            focusRelevant = false;\n                        }\n                    }\n\n                    if (focusRelevant) {\n                        nextNode.focus();\n                    } else {\n                        if (e.shiftKey) {\n                            // Focus on the last tabbable node in the step.\n                            this.currentStepNode.find(tabbableSelector).last().focus();\n                        } else {\n                            if (this.currentStepConfig.isOrphan) {\n                                // Focus on the step - there is no target.\n                                this.currentStepNode.focus();\n                            } else {\n                                // Focus on the step target.\n                                stepTarget.focus();\n                            }\n                        }\n                    }\n                    e.preventDefault();\n                }).call(this);\n                break;\n        }\n    }\n\n    /**\n     * Start the current tour.\n     *\n     * @method  startTour\n     * @param   {Number} startAt Which step number to start at. If not specified, starts at the last point.\n     * @chainable\n     * @return {Object} this.\n     * @fires tool_usertours/tourStart\n     * @fires tool_usertours/tourStarted\n     */\n    startTour(startAt) {\n        if (this.storage && typeof startAt === 'undefined') {\n            let storageStartValue = this.storage.getItem(this.storageKey);\n            if (storageStartValue) {\n                let storageStartAt = parseInt(storageStartValue, 10);\n                if (storageStartAt <= this.steps.length) {\n                    startAt = storageStartAt;\n                }\n            }\n        }\n\n        if (typeof startAt === 'undefined') {\n            startAt = this.getCurrentStepNumber();\n        }\n\n        const tourStartEvent = this.dispatchEvent(eventTypes.tourStart, {startAt}, true);\n        if (!tourStartEvent.defaultPrevented) {\n            this.gotoStep(startAt);\n            this.tourRunning = true;\n            this.dispatchEvent(eventTypes.tourStarted, {startAt});\n        }\n\n        return this;\n    }\n\n    /**\n     * Restart the tour from the beginning, resetting the completionlag.\n     *\n     * @method  restartTour\n     * @chainable\n     * @return {Object} this.\n     */\n    restartTour() {\n        return this.startTour(0);\n    }\n\n    /**\n     * End the current tour.\n     *\n     * @method  endTour\n     * @chainable\n     * @return {Object} this.\n     * @fires tool_usertours/tourEnd\n     * @fires tool_usertours/tourEnded\n     */\n    endTour() {\n        const tourEndEvent = this.dispatchEvent(eventTypes.tourEnd, {}, true);\n        if (tourEndEvent.defaultPrevented) {\n            return this;\n        }\n\n        if (this.currentStepConfig) {\n            let previousTarget = this.getStepTarget(this.currentStepConfig);\n            if (previousTarget) {\n                if (!previousTarget.attr('tabindex')) {\n                    previousTarget.attr('tabindex', '-1');\n                }\n                previousTarget.first().focus();\n            }\n        }\n\n        this.hide(true);\n\n        this.tourRunning = false;\n        this.dispatchEvent(eventTypes.tourEnded);\n\n        return this;\n    }\n\n    /**\n     * Hide any currently visible steps.\n     *\n     * @method hide\n     * @param {Bool} transition Animate the visibility change\n     * @chainable\n     * @return {Object} this.\n     * @fires tool_usertours/stepHide\n     * @fires tool_usertours/stepHidden\n     */\n    hide(transition) {\n        const stepHideEvent = this.dispatchEvent(eventTypes.stepHide, {}, true);\n        if (stepHideEvent.defaultPrevented) {\n            return this;\n        }\n\n        const pendingPromise = new PendingPromise('tool_usertours/tour:hide');\n        if (this.currentStepNode && this.currentStepNode.length) {\n            this.currentStepNode.hide();\n            if (this.currentStepPopper) {\n                this.currentStepPopper.destroy();\n            }\n        }\n\n        // Restore original target configuration.\n        if (this.currentStepConfig) {\n            let target = this.getStepTarget(this.currentStepConfig);\n            if (target) {\n                if (target.data('original-labelledby')) {\n                    target.attr('aria-labelledby', target.data('original-labelledby'));\n                }\n\n                if (target.data('original-describedby')) {\n                    target.attr('aria-describedby', target.data('original-describedby'));\n                }\n\n                if (target.data('original-tabindex')) {\n                    target.attr('tabindex', target.data('tabindex'));\n                } else {\n                    // If the target does not have the tabindex attribute at the beginning. We need to remove it.\n                    // We should wait a little here before removing the attribute to prevent the browser from adding it again.\n                    window.setTimeout(() => {\n                        target.removeAttr('tabindex');\n                    }, 400);\n                }\n            }\n\n            // Clear the step configuration.\n            this.currentStepConfig = null;\n        }\n\n        // Remove the highlight attribute when the hide occurs.\n        $('[data-flexitour=\"highlight\"]').removeAttr('data-flexitour');\n\n        const backdrop = $('[data-flexitour=\"backdrop\"]');\n        if (backdrop.length) {\n            if (transition) {\n                const backdropRemovalPromise = new PendingPromise('tool_usertours/tour:hide:backdrop');\n                backdrop.fadeOut(400, function() {\n                    $(this).remove();\n                    backdropRemovalPromise.resolve();\n                });\n            } else {\n                backdrop.remove();\n            }\n        }\n\n        // Remove aria-describedby and tabindex attributes.\n        if (this.currentStepNode && this.currentStepNode.length) {\n            let stepId = this.currentStepNode.attr('id');\n            if (stepId) {\n                let currentStepElement = '[aria-describedby=\"' + stepId + '-body\"]';\n                $(currentStepElement).removeAttr('tabindex');\n                $(currentStepElement).removeAttr('aria-describedby');\n            }\n        }\n\n        // Reset the listeners.\n        this.resetStepListeners();\n\n        this.accessibilityHide();\n\n        this.dispatchEvent(eventTypes.stepHidden);\n\n        this.currentStepNode = null;\n        this.currentStepPopper = null;\n\n        pendingPromise.resolve();\n        return this;\n    }\n\n    /**\n     * Show the current steps.\n     *\n     * @method show\n     * @chainable\n     * @return {Object} this.\n     */\n    show() {\n        // Show the current step.\n        let startAt = this.getCurrentStepNumber();\n\n        return this.gotoStep(startAt);\n    }\n\n    /**\n     * Return the current step node.\n     *\n     * @method  getStepContainer\n     * @return  {jQuery}\n     */\n    getStepContainer() {\n        return $(this.currentStepNode);\n    }\n\n    /**\n     * Calculate scrollTop.\n     *\n     * @method  calculateScrollTop\n     * @param   {Object}    stepConfig      The step configuration of the step\n     * @return  {Number}\n     */\n    calculateScrollTop(stepConfig) {\n        let viewportHeight = $(window).height();\n        let targetNode = this.getStepTarget(stepConfig);\n\n        let scrollParent = $(window);\n        if (targetNode.parents('[data-usertour=\"scroller\"]').length) {\n            scrollParent = targetNode.parents('[data-usertour=\"scroller\"]');\n        }\n        let scrollTop = scrollParent.scrollTop();\n\n        if (stepConfig.placement === 'top') {\n            // If the placement is top, center scroll at the top of the target.\n            scrollTop = targetNode.offset().top - (viewportHeight / 2);\n        } else if (stepConfig.placement === 'bottom') {\n            // If the placement is bottom, center scroll at the bottom of the target.\n            scrollTop = targetNode.offset().top + targetNode.height() + scrollTop - (viewportHeight / 2);\n        } else if (targetNode.height() <= (viewportHeight * 0.8)) {\n            // If the placement is left/right, and the target fits in the viewport, centre screen on the target\n            scrollTop = targetNode.offset().top - ((viewportHeight - targetNode.height()) / 2);\n        } else {\n            // If the placement is left/right, and the target is bigger than the viewport, set scrollTop to target.top + buffer\n            // and change step attachmentTarget to top+.\n            scrollTop = targetNode.offset().top - (viewportHeight * 0.2);\n        }\n\n        // Never scroll over the top.\n        scrollTop = Math.max(0, scrollTop);\n\n        // Never scroll beyond the bottom.\n        scrollTop = Math.min($(document).height() - viewportHeight, scrollTop);\n\n        return Math.ceil(scrollTop);\n    }\n\n    /**\n     * Calculate dialogue position for page middle.\n     *\n     * @param {jQuery} currentStepNode Current step node\n     * @method  calculateScrollTop\n     */\n    calculateStepPositionInPage(currentStepNode) {\n        let top = MINSPACING;\n        const viewportHeight = $(window).height();\n        const stepHeight = currentStepNode.height();\n        const viewportWidth = $(window).width();\n        const stepWidth = currentStepNode.width();\n        if (viewportHeight >= (stepHeight + (MINSPACING * 2))) {\n            top = Math.ceil((viewportHeight - stepHeight) / 2);\n        } else {\n            const headerHeight = currentStepNode.find('.modal-header').first().outerHeight() ?? 0;\n            const footerHeight = currentStepNode.find('.modal-footer').first().outerHeight() ?? 0;\n            const currentStepBody = currentStepNode.find('[data-placeholder=\"body\"]').first();\n            const maxHeight = viewportHeight - (MINSPACING * 2) - headerHeight - footerHeight;\n            currentStepBody.css({\n                'max-height': maxHeight + 'px',\n                'overflow': 'auto',\n            });\n        }\n        currentStepNode.offset({\n            top: top,\n            left: Math.ceil((viewportWidth - stepWidth) / 2)\n        });\n    }\n\n    /**\n     * Position the step on the page.\n     *\n     * @method  positionStep\n     * @param   {Object}    stepConfig      The step configuration of the step\n     * @chainable\n     * @return {Object} this.\n     */\n    positionStep(stepConfig) {\n        let content = this.currentStepNode;\n        let thisT = this;\n        if (!content || !content.length) {\n            // Unable to find the step node.\n            return this;\n        }\n\n        stepConfig.placement = this.recalculatePlacement(stepConfig);\n        let flipBehavior;\n        switch (stepConfig.placement) {\n            case 'left':\n                flipBehavior = ['left', 'right', 'top', 'bottom'];\n                break;\n            case 'right':\n                flipBehavior = ['right', 'left', 'top', 'bottom'];\n                break;\n            case 'top':\n                flipBehavior = ['top', 'bottom', 'right', 'left'];\n                break;\n            case 'bottom':\n                flipBehavior = ['bottom', 'top', 'right', 'left'];\n                break;\n            default:\n                flipBehavior = 'flip';\n                break;\n        }\n\n        let offset = '0';\n        if (stepConfig.backdrop) {\n            // Offset the arrow so that it points to the cut-out in the backdrop.\n            offset = `-${BUFFER}, ${BUFFER}`;\n        }\n\n        let target = this.getStepTarget(stepConfig);\n        var config = {\n            placement: stepConfig.placement + '-start',\n            removeOnDestroy: true,\n            modifiers: {\n                flip: {\n                    behaviour: flipBehavior,\n                },\n                arrow: {\n                    element: '[data-role=\"arrow\"]',\n                },\n                offset: {\n                    offset: offset\n                }\n            },\n            onCreate: function(data) {\n                recalculateArrowPosition(data);\n                recalculateStepPosition(data);\n            },\n            onUpdate: function(data) {\n                recalculateArrowPosition(data);\n                if (thisT.possitionNeedToBeRecalculated) {\n                    thisT.recalculatedNo++;\n                    thisT.possitionNeedToBeRecalculated = false;\n                    recalculateStepPosition(data);\n                }\n                // Reset backdrop position when things update.\n                thisT.recalculateBackdropPosition(stepConfig);\n            },\n        };\n\n        let recalculateArrowPosition = function(data) {\n            let placement = data.placement.split('-')[0];\n            const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n            const arrowElement = data.instance.popper.querySelector('[data-role=\"arrow\"]');\n            const stepElement = $(data.instance.popper.querySelector('[data-role=\"flexitour-step\"]'));\n            if (isVertical) {\n                let arrowHeight = parseFloat(window.getComputedStyle(arrowElement).height);\n                let arrowOffset = parseFloat(window.getComputedStyle(arrowElement).top);\n                let popperHeight = parseFloat(window.getComputedStyle(data.instance.popper).height);\n                let popperOffset = parseFloat(window.getComputedStyle(data.instance.popper).top);\n                let popperBorderWidth = parseFloat(stepElement.css('borderTopWidth'));\n                let popperBorderRadiusWidth = parseFloat(stepElement.css('borderTopLeftRadius')) * 2;\n                let arrowPos = arrowOffset + (arrowHeight / 2);\n                let maxPos = popperHeight + popperOffset - popperBorderWidth - popperBorderRadiusWidth;\n                let minPos = popperOffset + popperBorderWidth + popperBorderRadiusWidth;\n                if (arrowPos >= maxPos || arrowPos <= minPos) {\n                    let newArrowPos = 0;\n                    if (arrowPos > (popperHeight / 2)) {\n                        newArrowPos = maxPos - arrowHeight;\n                    } else {\n                        newArrowPos = minPos + arrowHeight;\n                    }\n                    $(arrowElement).css('top', newArrowPos);\n                }\n            } else {\n                let arrowWidth = parseFloat(window.getComputedStyle(arrowElement).width);\n                let arrowOffset = parseFloat(window.getComputedStyle(arrowElement).left);\n                let popperWidth = parseFloat(window.getComputedStyle(data.instance.popper).width);\n                let popperOffset = parseFloat(window.getComputedStyle(data.instance.popper).left);\n                let popperBorderWidth = parseFloat(stepElement.css('borderTopWidth'));\n                let popperBorderRadiusWidth = parseFloat(stepElement.css('borderTopLeftRadius')) * 2;\n                let arrowPos = arrowOffset + (arrowWidth / 2);\n                let maxPos = popperWidth + popperOffset - popperBorderWidth - popperBorderRadiusWidth;\n                let minPos = popperOffset + popperBorderWidth + popperBorderRadiusWidth;\n                if (arrowPos >= maxPos || arrowPos <= minPos) {\n                    let newArrowPos = 0;\n                    if (arrowPos > (popperWidth / 2)) {\n                        newArrowPos = maxPos - arrowWidth;\n                    } else {\n                        newArrowPos = minPos + arrowWidth;\n                    }\n                    $(arrowElement).css('left', newArrowPos);\n                }\n            }\n        };\n\n        const recalculateStepPosition = function(data) {\n            const placement = data.placement.split('-')[0];\n            const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n            const popperElement = $(data.instance.popper);\n            const targetElement = $(data.instance.reference);\n            const arrowElement = popperElement.find('[data-role=\"arrow\"]');\n            const stepElement = popperElement.find('[data-role=\"flexitour-step\"]');\n            const viewportHeight = $(window).height();\n            const viewportWidth = $(window).width();\n            const arrowHeight = parseFloat(arrowElement.outerHeight(true));\n            const popperHeight = parseFloat(popperElement.outerHeight(true));\n            const targetHeight = parseFloat(targetElement.outerHeight(true));\n            const arrowWidth = parseFloat(arrowElement.outerWidth(true));\n            const popperWidth = parseFloat(popperElement.outerWidth(true));\n            const targetWidth = parseFloat(targetElement.outerWidth(true));\n            let maxHeight;\n\n            if (thisT.recalculatedNo > 1) {\n                // The current screen is too small, and cannot fit with the original placement.\n                // We should set the placement to auto so the PopperJS can calculate the perfect placement.\n                thisT.currentStepPopper.options.placement = isVertical ? 'auto-left' : 'auto-bottom';\n            }\n            if (thisT.recalculatedNo > 2) {\n                // Return here to prevent recursive calling.\n                return;\n            }\n\n            if (isVertical) {\n                // Find the best place to put the tour: Left of right.\n                const leftSpace = targetElement.offset().left > 0 ? targetElement.offset().left : 0;\n                const rightSpace = viewportWidth - leftSpace - targetWidth;\n                const remainingSpace = leftSpace >= rightSpace ? leftSpace : rightSpace;\n                maxHeight = viewportHeight - MINSPACING * 2;\n                if (remainingSpace < (popperWidth + arrowWidth)) {\n                    const maxWidth = remainingSpace - MINSPACING - arrowWidth;\n                    if (maxWidth > 0) {\n                        popperElement.css({\n                            'max-width': maxWidth + 'px',\n                        });\n                        // Not enough space, flag true to make Popper to recalculate the position.\n                        thisT.possitionNeedToBeRecalculated = true;\n                    }\n                } else if (maxHeight < popperHeight) {\n                    // Check if the Popper's height can fit the viewport height or not.\n                    // If not, set the correct max-height value for the Popper element.\n                    popperElement.css({\n                        'max-height': maxHeight + 'px',\n                    });\n                }\n            } else {\n                // Find the best place to put the tour: Top of bottom.\n                const topSpace = targetElement.offset().top > 0 ? targetElement.offset().top : 0;\n                const bottomSpace = viewportHeight - topSpace - targetHeight;\n                const remainingSpace = topSpace >= bottomSpace ? topSpace : bottomSpace;\n                maxHeight = remainingSpace - MINSPACING - arrowHeight;\n                if (remainingSpace < (popperHeight + arrowHeight)) {\n                    // Not enough space, flag true to make Popper to recalculate the position.\n                    thisT.possitionNeedToBeRecalculated = true;\n                }\n            }\n\n            // Check if the Popper's height can fit the viewport height or not.\n            // If not, set the correct max-height value for the body.\n            const currentStepBody = stepElement.find('[data-placeholder=\"body\"]').first();\n            const headerEle = stepElement.find('.modal-header').first();\n            const footerEle = stepElement.find('.modal-footer').first();\n            const headerHeight = headerEle.outerHeight(true) ?? 0;\n            const footerHeight = footerEle.outerHeight(true) ?? 0;\n            maxHeight = maxHeight - headerHeight - footerHeight;\n            if (maxHeight > 0) {\n                headerEle.removeClass('minimal');\n                footerEle.removeClass('minimal');\n                currentStepBody.css({\n                    'max-height': maxHeight + 'px',\n                    'overflow': 'auto',\n                });\n            } else {\n                headerEle.addClass('minimal');\n                footerEle.addClass('minimal');\n            }\n            // Call the Popper update method to update the position.\n            thisT.currentStepPopper.update();\n        };\n\n        let background = $('[data-flexitour=\"highlight\"]');\n        if (background.length) {\n            target = background;\n        }\n        this.currentStepPopper = new Popper(target, content[0], config);\n\n        return this;\n    }\n\n    /**\n     * For left/right placement, checks that there is room for the step at current window size.\n     *\n     * If there is not enough room, changes placement to 'top'.\n     *\n     * @method  recalculatePlacement\n     * @param   {Object}    stepConfig      The step configuration of the step\n     * @return  {String}                    The placement after recalculate\n     */\n    recalculatePlacement(stepConfig) {\n        const arrowWidth = 16;\n        let target = this.getStepTarget(stepConfig);\n        let widthContent = this.currentStepNode.width() + arrowWidth;\n        let targetOffsetLeft = target.offset().left - BUFFER;\n        let targetOffsetRight = target.offset().left + target.width() + BUFFER;\n        let placement = stepConfig.placement;\n\n        if (['left', 'right'].indexOf(placement) !== -1) {\n            if ((targetOffsetLeft < (widthContent + BUFFER)) &&\n                ((targetOffsetRight + widthContent + BUFFER) > document.documentElement.clientWidth)) {\n                placement = 'top';\n            }\n        }\n        return placement;\n    }\n\n    /**\n     * Recaculate where the backdrop and its cut-out should be.\n     *\n     * This is needed when highlighted elements are off the page.\n     * This can be called on update to recalculate it all.\n     *\n     * @method recalculateBackdropPosition\n     * @param  {Object} stepConfig The step configuration of the step\n     */\n    recalculateBackdropPosition(stepConfig) {\n        if (stepConfig.backdrop) {\n            this.positionBackdrop(stepConfig);\n        }\n    }\n\n    /**\n     * Add the backdrop.\n     *\n     * @method  positionBackdrop\n     * @param   {Object}    stepConfig      The step configuration of the step\n     * @chainable\n     * @return {Object} this.\n     */\n    positionBackdrop(stepConfig) {\n        if (stepConfig.backdrop) {\n            this.currentStepConfig.hasBackdrop = true;\n\n            // Position our backdrop above everything else.\n            let backdrop = $('div[data-flexitour=\"backdrop\"]');\n            if (!backdrop.length) {\n                backdrop = $('<div data-flexitour=\"backdrop\"></div>');\n                $('body').append(backdrop);\n            }\n\n            if (this.isStepActuallyVisible(stepConfig)) {\n                let targetNode = this.getStepTarget(stepConfig);\n                targetNode.attr('data-flexitour', 'highlight');\n\n                let distanceFromTop = targetNode[0].getBoundingClientRect().top;\n                let relativeTop = targetNode.offset().top - distanceFromTop;\n\n                /*\n                Draw a clip-path that makes the backdrop a window.\n                The clip-path is drawn with x/y coordinates in the following sequence.\n\n                1--------------------------------------------------2\n                11                                                 |\n                |                                                  |\n                |        8-----------------------------7           |\n                |        |                             |           |\n                |        |                             |           |\n                |        |                             |           |\n                10-------9                             |           |\n                5--------------------------------------6           |\n                |                                                  |\n                |                                                  |\n                4--------------------------------------------------3\n                */\n\n                // These values will help us draw the backdrop.\n                const viewportHeight = $(window).height();\n                const viewportWidth = $(window).width();\n                const elementWidth = targetNode.outerWidth() + (BUFFER * 2);\n                let elementHeight = targetNode.outerHeight() + (BUFFER * 2);\n                const elementLeft = targetNode.offset().left - BUFFER;\n                let elementTop = targetNode.offset().top - BUFFER - relativeTop;\n\n                // Check the amount of navbar overlap the highlight element has.\n                // We will adjust the backdrop shape to compensate for the fixed navbar.\n                let navbarOverlap = 0;\n                if (targetNode.parents('[data-usertour=\"scroller\"]').length) {\n                    // Determine the navbar height.\n                    const scrollerElement = targetNode.parents('[data-usertour=\"scroller\"]');\n                    const navbarHeight = scrollerElement.offset().top;\n                    navbarOverlap = Math.max(Math.ceil(navbarHeight - elementTop), 0);\n                    elementTop = elementTop + navbarOverlap;\n                    elementHeight = elementHeight - navbarOverlap;\n                }\n\n                // Check if the step container is in the 'top' position.\n                // We will re-anchor the step container to the shifted backdrop edge as opposed to the actual element.\n                if (this.currentStepNode && this.currentStepNode.length) {\n                    const xPlacement = this.currentStepNode[0].getAttribute('x-placement');\n                    if (xPlacement === 'top-start') {\n                        this.currentStepNode[0].style.top = `${navbarOverlap}px`;\n                    } else {\n                        this.currentStepNode[0].style.top = '0px';\n                    }\n                }\n\n                let backdropPath = document.querySelector('div[data-flexitour=\"backdrop\"]');\n                const radius = 10;\n\n                const bottomRight = {\n                    'x1': elementLeft + elementWidth - radius,\n                    'y1': elementTop + elementHeight,\n                    'x2': elementLeft + elementWidth,\n                    'y2': elementTop + elementHeight - radius,\n                };\n\n                const topRight = {\n                    'x1': elementLeft + elementWidth,\n                    'y1': elementTop + radius,\n                    'x2': elementLeft + elementWidth - radius,\n                    'y2': elementTop,\n                };\n\n                const topLeft = {\n                    'x1': elementLeft + radius,\n                    'y1': elementTop,\n                    'x2': elementLeft,\n                    'y2': elementTop + radius,\n                };\n\n                const bottomLeft = {\n                    'x1': elementLeft,\n                    'y1': elementTop + elementHeight - radius,\n                    'x2': elementLeft + radius,\n                    'y2': elementTop + elementHeight,\n                };\n\n                // L = line.\n                // C = Bezier curve.\n                // Z = Close path.\n                backdropPath.style.clipPath = `path('M 0 0 \\\n                    L ${viewportWidth} 0 \\\n                    L ${viewportWidth} ${viewportHeight} \\\n                    L 0 ${viewportHeight} \\\n                    L 0 ${elementTop + elementHeight} \\\n                    L ${bottomRight.x1} ${bottomRight.y1} \\\n                    C ${bottomRight.x1} ${bottomRight.y1} ${bottomRight.x2} ${bottomRight.y1} ${bottomRight.x2} ${bottomRight.y2} \\\n                    L ${topRight.x1} ${topRight.y1} \\\n                    C ${topRight.x1} ${topRight.y1} ${topRight.x1} ${topRight.y2} ${topRight.x2} ${topRight.y2} \\\n                    L ${topLeft.x1} ${topLeft.y1} \\\n                    C ${topLeft.x1} ${topLeft.y1} ${topLeft.x2} ${topLeft.y1} ${topLeft.x2} ${topLeft.y2} \\\n                    L ${bottomLeft.x1} ${bottomLeft.y1} \\\n                    C ${bottomLeft.x1} ${bottomLeft.y1} ${bottomLeft.x1} ${bottomLeft.y2} ${bottomLeft.x2} ${bottomLeft.y2} \\\n                    L 0 ${elementTop + elementHeight} \\\n                    Z'\n                )`;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Calculate the inheritted position.\n     *\n     * @method  calculatePosition\n     * @param   {jQuery}    elem                        The element to calculate position for\n     * @return  {String}                                Calculated position\n     */\n    calculatePosition(elem) {\n        elem = $(elem);\n        while (elem.length && elem[0] !== document) {\n            let position = elem.css('position');\n            if (position !== 'static') {\n                return position;\n            }\n            elem = elem.parent();\n        }\n\n        return null;\n    }\n\n    /**\n     * Perform accessibility changes for step shown.\n     *\n     * This will add aria-hidden=\"true\" to all siblings and parent siblings.\n     *\n     * @method  accessibilityShow\n     */\n    accessibilityShow() {\n        let stateHolder = 'data-has-hidden';\n        let attrName = 'aria-hidden';\n        let hideFunction = function(child) {\n            let flexitourRole = child.data('flexitour');\n            if (flexitourRole) {\n                switch (flexitourRole) {\n                    case 'container':\n                    case 'target':\n                        return;\n                }\n            }\n\n            let hidden = child.attr(attrName);\n            if (!hidden) {\n                child.attr(stateHolder, true);\n                Aria.hide(child);\n            }\n        };\n\n        this.currentStepNode.siblings().each(function(index, node) {\n            hideFunction($(node));\n        });\n        this.currentStepNode.parentsUntil('body').siblings().each(function(index, node) {\n            hideFunction($(node));\n        });\n    }\n\n    /**\n     * Perform accessibility changes for step hidden.\n     *\n     * This will remove any newly added aria-hidden=\"true\".\n     *\n     * @method  accessibilityHide\n     */\n    accessibilityHide() {\n        let stateHolder = 'data-has-hidden';\n        let showFunction = function(child) {\n            let hidden = child.attr(stateHolder);\n            if (typeof hidden !== 'undefined') {\n                child.removeAttr(stateHolder);\n                Aria.unhide(child);\n            }\n        };\n\n        $('[' + stateHolder + ']').each(function(index, node) {\n            showFunction($(node));\n        });\n    }\n};\n\nexport default Tour;\n"],"names":["constructor","config","init","eventHandlers","reset","originalConfiguration","configure","apply","this","arguments","possitionNeedToBeRecalculated","recalculatedNo","storage","window","sessionStorage","storageKey","tourName","e","hide","resetStepListeners","steps","currentStepNumber","eventName","forEach","handler","addEventHandler","resetStepDefaults","template","templateContent","checkMinimumRequirements","Error","length","loadOriginalConfiguration","stepDefaults","setStepDefaults","extend","element","placement","delay","moveOnClick","moveAfterTime","orphan","direction","getCurrentStepNumber","parseInt","setCurrentStepNumber","stepNumber","setItem","code","DOMException","QUOTA_EXCEEDED_ERR","removeItem","getNextStepNumber","nextStepNumber","isStepPotentiallyVisible","getStepConfig","getPreviousStepNumber","previousStepNumber","isLastStep","stepConfig","isStepActuallyVisible","getPotentiallyVisibleSteps","position","result","stepId","stepid","isCSSAllowed","target","getStepTarget","is","testCSSElement","document","createElement","classList","add","body","appendChild","isAllowed","getComputedStyle","display","remove","next","gotoStep","previous","endTour","_gotoStep","pendingPromise","PendingPromise","delayed","setTimeout","resolve","fn","dispatchEvent","eventTypes","stepRender","defaultPrevented","renderStep","stepRendered","normalizeStepConfig","$","reflex","moveAfterClick","content","attachTo","attachPoint","first","detail","cancelable","tour","push","processStepListeners","listeners","node","currentStepNode","args","proxy","handleKeyDown","targetNode","parents","listener","on","off","currentStepConfig","getTemplateContent","find","html","title","nextBtn","endBtn","removeClass","addClass","prop","then","value","catch","attr","displaystepnumbers","stepsPotentiallyVisible","totalStepsPotentiallyVisible","total","addStepToPage","clone","animationTarget","stop","data","positionBackdrop","append","css","top","left","animate","scrollTop","calculateScrollTop","promise","positionStep","revealStep","bind","isOrphan","currentStepPopper","Popper","removeOnDestroy","arrowElement","modifiers","enabled","applyStyle","onLoad","onCreate","images","calculateStepPositionInPage","fadeIn","announceStep","focus","bodyRegion","headerRegion","accessibilityShow","tabbableSelector","keyCode","hasBackdrop","currentIndex","nextIndex","nextNode","focusRelevant","activeElement","stepTarget","tabbableNodes","dialogContainer","filter","index","has","each","shiftKey","closest","last","preventDefault","call","startTour","startAt","storageStartValue","getItem","storageStartAt","tourStart","tourRunning","tourStarted","restartTour","tourEnd","previousTarget","tourEnded","transition","stepHide","destroy","removeAttr","backdrop","backdropRemovalPromise","fadeOut","currentStepElement","accessibilityHide","stepHidden","show","getStepContainer","viewportHeight","height","scrollParent","offset","Math","max","min","ceil","stepHeight","viewportWidth","width","stepWidth","MINSPACING","maxHeight","outerHeight","flipBehavior","thisT","recalculatePlacement","flip","behaviour","arrow","recalculateArrowPosition","recalculateStepPosition","onUpdate","recalculateBackdropPosition","split","isVertical","indexOf","instance","popper","querySelector","stepElement","arrowHeight","parseFloat","arrowOffset","popperHeight","popperOffset","popperBorderWidth","popperBorderRadiusWidth","arrowPos","maxPos","minPos","newArrowPos","arrowWidth","popperWidth","popperElement","targetElement","reference","targetHeight","outerWidth","targetWidth","options","leftSpace","rightSpace","remainingSpace","maxWidth","topSpace","bottomSpace","currentStepBody","headerEle","footerEle","update","background","widthContent","targetOffsetLeft","targetOffsetRight","documentElement","clientWidth","distanceFromTop","getBoundingClientRect","relativeTop","elementWidth","BUFFER","elementHeight","elementLeft","elementTop","navbarOverlap","navbarHeight","xPlacement","getAttribute","style","radius","bottomRight","topRight","topLeft","bottomLeft","clipPath","x1","y1","x2","y2","calculatePosition","elem","parent","hideFunction","child","flexitourRole","Aria","siblings","parentsUntil","unhide"],"mappings":"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"}